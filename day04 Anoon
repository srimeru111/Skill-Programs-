1.Highest employee salary
#include <stdio.h>
struct Employee_s{
    int id;
    char name[250];
    float salary;
    char department[50];
};
typedef struct Employee_s Employee;
void read(Employee emp[],int n);
void saveEmployee(Employee emp[],int n);
void loadEmployee(Employee emp[],int n);
void display(Employee emp[],int n);
Employee findHighest(Employee emp[],int n);

int main() { 
    int count;
    printf("Enter number of employees:");
    scanf("%d",&count);
    Employee emp[1000];
    read(emp,count);
    saveEmployee( emp, count);
    loadEmployee( emp, count);
    display(emp,count);
    Employee Highest=findHighest(emp,count);
    printf("Employee with highest salary:%s,%.2f(%s)\n",Highest.name,Highest.salary,Highest.department);
    return 0;
}
void read(Employee emp[],int n){
    printf("Enter details(ID,Name,Salary,Department):\n");
    for(int i=0;i<n;i++){
    scanf("%d%s%f%s",&emp[i].id,emp[i].name,&emp[i].salary,emp[i].department);
    }
}
void display(Employee emp[],int n){
    printf("The details are(ID,Name,Salary,Department):\n");
    for(int i=0;i<n;i++){
     printf("%d %s %f %s\n",emp[i].id,emp[i].name,emp[i].salary,emp[i].department);
    }
}    
Employee findHighest(Employee emp[],int n){
    Employee maxEmployee=emp[0];
    for(int i=1;i<n;i++){
            if(emp[i].salary>maxEmployee.salary){
                maxEmployee=emp[i];
            }
        }
        return maxEmployee;
    }
    /*Employee findHighest(Employee emp[],int n){
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(emp[i].salary<emp[j].salary){
                Employee temp;
                temp =emp[i];
                emp[i]=emp[j];
                emp[j]=temp;
            }
        }
    }
    printf("Employee with highest salary:%s,%.2f(%s)\n",emp[0].name,emp[0].salary,emp[0].department);
}*/
void saveEmployee(Employee emp[],int n){
    FILE* file =fopen("employees.txt","w");
    if(file==NULL){
        printf("Eroor in creating file.\n");
        return;
    }
    for(int i=0;i<n;i++){
        fprintf(file,"%d %s %.2f %s\n",emp[i].id,emp[i].name,emp[i].salary,emp[i].department);
    }
    fclose(file);
}
void loadEmployee(Employee emp[],int n){
      FILE* file =fopen("employee.txt","r");
    if(file==NULL){
        printf("Eroor in reading file.\n");
        return;
    }
    for(int i=0;i<n;i++){
        fscanf(file,"%d %s %f %s\n",&emp[i].id,emp[i].name,&emp[i].salary,emp[i].department);
    }
    fclose(file);
}
2. Book entry 
#include <stdio.h>
#define max 1000
struct Fiction_t{
    char title[250];
    char author[250];
    float price;
};
typedef struct Fiction_t Fiction;
struct Nonfiction_t{
    char title[250];
    char subject[50];
    float price;
};
typedef struct Nonfiction_t Nonfiction;
union BookType_t{
    Fiction fiction;
    Nonfiction nonfiction;
};
typedef union BookType_t BookType;
struct Book_t{                
    int type;
    BookType bookType;
};
typedef struct Book_t Book;
int bookCount;
Book books[max];
void readBooks(){
    printf("Enter number of books:");
    scanf("%d",&bookCount);
    for(int i=0;i<bookCount;i++){
        printf("Enter book type(1-Fiction,2-Non-Fiction):");
        scanf("%d",&books[i].type);
        switch(books[i].type){
            case 1:{
                printf("Enter Fiction Book Details (title,auther,price):");
                scanf("%s%s%f",books[i].bookType.fiction.title,books[i].bookType.fiction.author,&books[i].bookType.fiction.price);
            }break;
            case 2:{
                 printf("Enter Non-Fiction Book Details (title,subject,price):");
                scanf("%s%s%f",books[i].bookType.nonfiction.title,books[i].bookType.nonfiction.subject,&books[i].bookType.nonfiction.price);
            }break;
        }
    }
}
void displayBooks(){
    for(int i=0;i<bookCount;i++){
        switch(books[i].type){
            case 1:{
                printf("Fiction Book:%s\t%s\t%f",books[i].bookType.fiction.title,books[i].bookType.fiction.author,books[i].bookType.fiction.price);
            }break;
            case 2:{
                 printf("Non-Fiction Book:%s\t%s\t%f",books[i].bookType.nonfiction.title,books[i].bookType.nonfiction.subject,books[i].bookType.nonfiction.price);
            }break;
        }
    }
}
int main(){
    readBooks();
    displayBooks();
    return 0;
}
