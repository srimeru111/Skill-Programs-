1. Insertion 
  #include<stdio.h>
int sortInsertion(float* salaries, int size);
void printSalaries(float* salaries, int size);
int main() {
    float salaries[] = {20.0f, 10.0f, 15.0f, 12.0f, 13.0f};
    int salariiesCount = 5;
    printf("Before Sort:\n");printSalaries(salaries, salariiesCount);
    sortInsertion(salaries, salariiesCount);
    printf("After Sort:\n");printSalaries(salaries, salariiesCount);
    return 0;
}
void printSalaries(float* salaries, int size) {
    for(int I = 0; I < size; I++) {
        printf("%.2f ", salaries[I]);
    }
    printf("\n");
}
int sortInsertion(float* salaries, int size) {
    for(int I = 1; I < size; I++) {
        int targetIndex = I;
        float target = salaries[targetIndex];
        for(int sortedIndex = I -1; 
            sortedIndex >= 0 && salaries[sortedIndex] > target; 
            sortedIndex--) {
            salaries[targetIndex] = salaries[sortedIndex];
            targetIndex--;
        }
2.Selection
#include<stdio.h>
int sortInsertion(float* salaries, int size);
void printSalaries(float* salaries, int size);
void swap(float* first, float* second);
int main() {
    float salaries[] = {20.0f, 10.0f, 15.0f, 12.0f, 13.0f};
    int salariiesCount = 5;
    printf("Before Sort:\n");printSalaries(salaries, salariiesCount);
    sortSelection(salaries, salariiesCount);
    printf("After Sort:\n");printSalaries(salaries, salariiesCount);
    return 0;
}
void printSalaries(float* salaries, int size) {
    for(int I = 0; I < size; I++) {
        printf("%.2f ", salaries[I]);
    }
    printf("\n");
}
void swap(float* first, float* second) {
    float temp = (*first);
    (*first) = (*second);
    (*second) = temp;
}
int sortSelection(float* salaries, int size) {
    for(int I = 0; I < (size-1); I++) { //selection 
        int minIndex = I;
        for(int J = I + 1; J < size; J++) { //pass : to find min index
            if(salaries[J] < salaries[minIndex]) {
                minIndex = J;
            }
        }
        if(I != minIndex) {
            swap(&salaries[I], &salaries[minIndex]);
        }
    }
}
3. Binary 
#include<stdio.h>
int searchBinary(float* salaries, int size, float searchSalary); //salaries - sorted
int main() {
    float salaries[] = {10.0f, 12.0f, 13.0f, 15.0f, 20.0f};
    int salariiesCount = 5;
    float searchSalary = 15.0f;
     int index = searchBinary(salaries, salariiesCount, searchSalary);
    printf("%.2f found at index %d\n", searchSalary, index);
    return 0;
}
int searchBinary(float* salaries, int size, float searchSalary) {
    int left = 0, right = size - 1;
    while(left <= right) {
        int mid = (left + right) / 2;
        if(salaries[mid] == searchSalary) {
            return mid;
        } else if(searchSalary < salaries[mid]) {
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }

    return -1;
}
4.Linear
#include<stdio.h>
int searchLinear(float* salaries, int size, float searchSalary);
int main() {
    float salaries[] = {20.0f, 10.0f, 15.0f, 12.0f, 13.0f};
    int salariiesCount = 5;
    float searchSalary = 15.0f;
    int index = searchLinear(salaries, salariiesCount, searchSalary);
    printf("%.2f found at index %d\n", searchSalary, index);
    return 0;
}
int searchLinear(float* salaries, int size, float searchSalary) {
    for(int I = 0; I < size; I++) {
        if(salaries[I] == searchSalary) {
            return I;
        }
    }
    return -1;
}
        if(targetIndex != I) {
            salaries[targetIndex] = target;
        }
    }
}
5.Bubble
#include<stdio.h>
int bubbleSort(float* salaries, int size);
void printSalaries(float* salaries, int size);
void swap(float* first, float* second);
int main() {
    float salaries[] = {20.0f, 10.0f, 15.0f, 12.0f, 13.0f};
    int salariiesCount = 5;
    printf("Before Sort:\n");printSalaries(salaries, salariiesCount);
    bubbleSort(salaries, salariiesCount);
    printf("After Sort:\n");printSalaries(salaries, salariiesCount);
    return 0;
}
void printSalaries(float* salaries, int size) {
    for(int I = 0; I < size; I++) {
        printf("%.2f ", salaries[I]);
    }
    printf("\n");
}
void swap(float* first, float* second) {
    float temp = (*first);
    (*first) = (*second);
    (*second) = temp;
}
int bubbleSort(float* salaries, int size) {
    int isSwapped;
    do {
        isSwapped = 0;
        for(int I = 0; I < (size-1); I++) { //pass
            if(salaries[I] > salaries[I+1]) {
                swap(&salaries[I], &salaries[I+1]);
                isSwapped = 1;
            }
        }
        size--;
    }while(isSwapped);
    
}
